# .circleci/config.yml

# Specify the config version - version 2.1 is latest.
version: 2.1
# Specify Terraform version
orbs:
  terraform: circleci/terraform@3.1.0

parameters:
  service_name:
    default: FSharpTemplate
    type: string
  docker_name:
    default: fsharptemplate
    type: string
  terraform_env_config_file:
    default: na-ci.terraform.tfvars
    type: string

# Note: These are provided by the ayuda-acr context
# - AP_CONTAINER_REGISTRY_HOST
# - AP_CONTAINER_REGISTRY_PASSWORD
# - AP_CONTAINER_REGISTRY_USERNAME

# Note: These are provided by the ap-fsharp-template-resource-credentials-labs context
# - AZ_SERVICE_PRINCIPAL_APP_ID
# - AZ_SERVICE_PRINCIPAL_APP_PASSWORD

# Note: These are provided by the ap-fsharp-template-resource-credentials-preview context
# - AZ_SERVICE_PRINCIPAL_APP_ID
# - AZ_SERVICE_PRINCIPAL_APP_PASSWORD

# Note: These are provided by the ap-fsharp-template-resource-credentials-cloud context
# - AZ_SERVICE_PRINCIPAL_APP_ID
# - AZ_SERVICE_PRINCIPAL_APP_PASSWORD

# Note: These are provided by the az-resources-labs context
# - RESOURCE_GROUP_NAME
# - SERVICE_PLAN_NAME

# Note: These are provided by the az-resources context
# - AZ_TENANT
# - AZ_SUBSCRIPTION_ID

# Define the jobs for the current project.
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - run:
          name: Build
          command: dotnet build
          working_directory: << pipeline.parameters.service_name >>
      - run:
          name: Running Tests
          command: dotnet test
          working_directory: << pipeline.parameters.service_name >>

#  other-unit-tests:
#    ToDo
#  integration-tests:
#    ToDo

  build_image:
    docker:
      - image: circleci/buildpack-deps:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker login
          command: echo $AP_CONTAINER_REGISTRY_PASSWORD | docker login $AP_CONTAINER_REGISTRY_HOST -u $AP_CONTAINER_REGISTRY_USERNAME --password-stdin
      - run:
          name: Build image
          command: docker build --tag << pipeline.parameters.docker_name >>:build-<< pipeline.number >> --tag << pipeline.parameters.docker_name >>:latest .
      - run:
          name: Save Docker image
          command: docker save -o << pipeline.parameters.docker_name >>_latest.tar "<< pipeline.parameters.docker_name >>:build-<< pipeline.number >>"
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.docker_name >>_latest.tar

  terraform-single-job-labs:
    working_directory: ~/<< pipeline.parameters.service_name >>/Terraform
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform validate & init & import(s) & plan & apply
          command: |
            cd '/root/FSharpTemplate/Terraform'
            terraform validate
            terraform init -input=false
            terraform import -var 'azure_subscription_id=b9f2d614-47a6-4974-9a3a-9d260db71e07' -var 'azure_subscription_tenant_id=baf00b3a-3dce-4b83-a82c-e4ffaee51f84' -var 'service_principal_appid=771e6187-899a-4a94-b9ca-7ec66fa153e1' -var 'service_principal_password=aRr8Q~QVMrCgvobG60hULPuNgtOYfXiDc4DdfcDu' azurerm_resource_group.rg /subscriptions/b9f2d614-47a6-4974-9a3a-9d260db71e07/resourceGroups/ayudalabs-na-01
      - persist_to_workspace:
          root: .
          paths:
            - .
#--------------------------------
#      - terraform/install:
#          arch: amd64
#          os: linux
#          terraform_version: 0.14.2
#--------------------------------
#      - terraform/validate
#      - terraform/init
#      - run:
#          command: >-
#            terraform import -var 'azure_subscription_id=$AZ_SUBSCRIPTION_ID' -var 'azure_subscription_tenant_id=$AZ_TENANT' -var 'service_principal_appid=$AZ_SERVICE_PRINCIPAL_APP_ID' -var 'service_principal_password=$AZ_SERVICE_PRINCIPAL_APP_PASSWORD' azurerm_resource_group.rg /subscriptions/$AZ_SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP_NAME
#          name: Import Resource Group from Azure
#      - run:
#          command: >-
#            terraform import
#            \ -var 'azure_subscription_id=$AZ_SUBSCRIPTION_ID'
#            \ -var 'azure_subscription_tenant_id=$AZ_TENANT'
#            \ -var 'service_principal_appid=$AZ_SERVICE_PRINCIPAL_APP_ID'
#            \ -var 'service_principal_password=$AZ_SERVICE_PRINCIPAL_APP_PASSWORD'
#            \ azurerm_service_plan.sp /subscriptions/$AZ_SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Web/serverfarms/$SERVICE_PLAN_NAME
#          name: Import Service Principal from Azure
#      - run:
#          command: >-
#            terraform plan
#            \ -var-file="<< pipeline.parameters.terraform_env_config_file >>"
#            \ -var 'azure_subscription_id=$AZ_SUBSCRIPTION_ID'
#            \ -var 'azure_subscription_tenant_id=$AZ_TENANT'
#            \ -var 'service_principal_appid=$AZ_SERVICE_PRINCIPAL_APP_ID'
#            \ -var 'service_principal_password=$AZ_SERVICE_PRINCIPAL_APP_PASSWORD'
#            \ azurerm_service_plan.sp /subscriptions/$AZ_SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Web/serverfarms/$SERVICE_PLAN_NAME
#          name: Plan Terraform for loggin purposes
#      - run:
#          command: >-
#            terraform apply -auto-approve
#            \ -var-file="<< pipeline.parameters.terraform_env_config_file >>"
#            \ -var 'azure_subscription_id=$AZ_SUBSCRIPTION_ID'
#            \ -var 'azure_subscription_tenant_id=$AZ_TENANT'
#            \ -var 'service_principal_appid=$AZ_SERVICE_PRINCIPAL_APP_ID'
#            \ -var 'service_principal_password=$AZ_SERVICE_PRINCIPAL_APP_PASSWORD'
#            \ azurerm_service_plan.sp /subscriptions/$AZ_SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Web/serverfarms/$SERVICE_PLAN_NAME
#          name: Apply Terraform plan, creating the resources in cloud
#      - run:
#          command: >-
#            terraform apply -auto-approve
#            \ -var-file="<< pipeline.parameters.terraform_env_config_file >>"
#            \ -var 'azure_subscription_id=$AZ_SUBSCRIPTION_ID'
#            \ -var 'azure_subscription_tenant_id=$AZ_TENANT'
#            \ -var 'service_principal_appid=$AZ_SERVICE_PRINCIPAL_APP_ID'
#            \ -var 'service_principal_password=$AZ_SERVICE_PRINCIPAL_APP_PASSWORD'
#            \ azurerm_service_plan.sp /subscriptions/$AZ_SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Web/serverfarms/$SERVICE_PLAN_NAME
#          name: Import Service Principal from Azure

workflows:
  deploy_infrastructure:
    jobs:
#      - build
#      - build_image:
#          context:
#              - ayuda-acr
#          requires:
#            - build
      - terraform-single-job-labs:
#          requires:
#            - build
#            - build_image
          context:
            - az-resources
            - az-resources-labs
            - ap-fsharp-template-resource-credentials-labs